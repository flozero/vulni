import { defineStore } from "pinia"
import { ref } from "vue"
import type { Package, PackageContract } from "./services/checkVulnerability"
import { checkVulnerabilityBatch as checkVulnerabilityBatchService } from "./services/checkVulnerability"

export const useVulnerabilityStore = defineStore("vulnerability", () => {
    const vulnerabilities = ref<PackageContract[]>([])
    const vulnerabilitiesFetchStatus = ref<"pending" | "done" | "error">("done")

    const checkAllVulnerabilities = async (pkgs: Package[]) : Promise<void> => {
        vulnerabilitiesFetchStatus.value = "pending"
        try {
            const ret = await checkVulnerabilityBatchService(pkgs)
            vulnerabilities.value = ret
            vulnerabilitiesFetchStatus.value = "done"
        } catch(e) {
            vulnerabilitiesFetchStatus.value = "error"
            // logger
        } 
    }

    return {
        vulnerabilities,
        vulnerabilitiesFetchStatus,
        checkAllVulnerabilities
    }
})

